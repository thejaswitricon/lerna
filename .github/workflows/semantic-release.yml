name: Versioning

on:
  push:
    branches:
      - master

permissions: write-all

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install lerna

      - name: Commit changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add package-lock.json package.json
          git commit -m "Committing changes before versioning"

      - name: Get last release tag
        id: last-release
        run: echo "::set-output name=tag::$(git describe --abbrev=0 --tags)"

      - name: Get changed packages
        id: changed-packages
        run: |
          LAST_RELEASE="${{ steps.last-release.outputs.tag }}"
          CHANGED_PACKAGES=$(npx lerna ls --since="${LAST_RELEASE}" --json | jq -r '.[].name' | paste -sd "," -)
          echo "::set-output name=packages::${CHANGED_PACKAGES}"

      - name: Lerna versioning
        run: |
          CHANGED_PACKAGES="${{ steps.changed-packages.outputs.packages }}"
          npx lerna version --conventional-commits --yes --force-publish="${CHANGED_PACKAGES}"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: ${{ github.ref }}
          tags: true
          github_token: ${{ secrets.PAT_GITHUB2 }}




# name: Versioning

# on:
#   push:
#     branches:
#       - master  # Modify this according to your branch name

# permissions: write-all

# jobs:
#   versioning:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: 14  # Modify this according to your Node.js version requirements

#       - name: Install dependencies
#         run: npm install lerna

#       - name: Commit changes
#         run: |
#           git config user.name "${{ github.actor }}"
#           git config user.email "${{ github.actor }}@users.noreply.github.com"
#           git add package-lock.json package.json
#           git commit -m "Committing changes before versioning"

#       - name: Initialize lerna
#         run: npx lerna init

#       - name: Lerna versioning
#         run: npx lerna version --conventional-commits --yes 

#       - name: Push changes
#         uses: ad-m/github-push-action@v0.6.0
#         with:
#           branch: ${{ github.ref }}
#           tags: true
#           github_token: ${{ secrets.PAT_GITHUB2 }}






# name: semantic release using lerna

# on:
#   push:
#     branches:
#       - master
# permissions: write-all

# jobs:
#   version:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Install Dependencies
#         run: npm install lerna

#       - name: Run test
#         run: npx lerna init

#       - name: Update version
#         run: npm run new-version
